package clienteshds.visao;

import clienteshds.DAO.EmpresaDAO;
import clienteshds.modelo.Backup;
import clienteshds.modelo.Erro;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

public final class DashboardErros extends javax.swing.JFrame {

    EmpresaDAO empresaDAO = new EmpresaDAO();
    ArrayList<Backup> listaBackupsERROS = new ArrayList();

    /**
     * Creates new form Dashboard
     */
    public DashboardErros() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        ImageIcon icone = new ImageIcon("100x100.png");
        setIconImage(icone.getImage());
        carregaFiltros();
        carregaLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableErro = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Erros ClientesHDS");
        setBackground(new java.awt.Color(255, 255, 255));

        jTableErro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableErro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "ID Cliente", "Pasta Cliente", "Codigo Erro", "Programa", "Arquivo", "Mensagem", "Usuario TS", "Data/Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableErro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableErroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableErro);
        if (jTableErro.getColumnModel().getColumnCount() > 0) {
            jTableErro.getColumnModel().getColumn(0).setMinWidth(40);
            jTableErro.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTableErro.getColumnModel().getColumn(0).setMaxWidth(40);
            jTableErro.getColumnModel().getColumn(1).setMinWidth(60);
            jTableErro.getColumnModel().getColumn(1).setPreferredWidth(60);
            jTableErro.getColumnModel().getColumn(1).setMaxWidth(60);
            jTableErro.getColumnModel().getColumn(2).setMinWidth(80);
            jTableErro.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTableErro.getColumnModel().getColumn(2).setMaxWidth(80);
            jTableErro.getColumnModel().getColumn(3).setMinWidth(80);
            jTableErro.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTableErro.getColumnModel().getColumn(3).setMaxWidth(80);
            jTableErro.getColumnModel().getColumn(4).setMinWidth(150);
            jTableErro.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTableErro.getColumnModel().getColumn(4).setMaxWidth(150);
            jTableErro.getColumnModel().getColumn(5).setMinWidth(150);
            jTableErro.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTableErro.getColumnModel().getColumn(5).setMaxWidth(150);
            jTableErro.getColumnModel().getColumn(7).setMinWidth(150);
            jTableErro.getColumnModel().getColumn(7).setPreferredWidth(150);
            jTableErro.getColumnModel().getColumn(7).setMaxWidth(150);
            jTableErro.getColumnModel().getColumn(8).setMinWidth(150);
            jTableErro.getColumnModel().getColumn(8).setPreferredWidth(150);
            jTableErro.getColumnModel().getColumn(8).setMaxWidth(150);
        }

        jLabel1.setText("Empresa : ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todas" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("Resetar filtros");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jComboBox1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        carregaLista();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTableErroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableErroMouseClicked
        Integer idErro = (Integer) jTableErro.getValueAt(jTableErro.getSelectedRow(), 0);
        TelaErroDialog telaErroDialog  = new TelaErroDialog(this, rootPaneCheckingEnabled, idErro);
        telaErroDialog.setVisible(true);
    }//GEN-LAST:event_jTableErroMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardErros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardErros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardErros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardErros.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardErros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableErro;
    // End of variables declaration//GEN-END:variables
    private void carregaLista() {
        String dataAtual;
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        dataAtual = sdf.format(new Date());

        DefaultTableModel model = (DefaultTableModel) jTableErro.getModel();
        while (jTableErro.getRowCount() > 0) {
            model.removeRow(0);
        }
        ArrayList<Erro> listaErros = new ArrayList();
        try {
            listaErros = empresaDAO.buscaTodosErros();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DashboardBackup.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        if (jComboBox1.getSelectedIndex() == 0) {
            for (Erro erro : listaErros) {
                model.addRow(new Object[]{erro.getId_erro(), erro.getId_cliente(), erro.getPastaEmpresa(), erro.getCoderro(), erro.getPrograma(), erro.getArquivo(), erro.getMensagemerro(), erro.getUsuariots(), erro.getData()});
            }
        } else {
            for (Erro erro : listaErros) {
                if (jComboBox1.getSelectedItem().toString().equals(erro.getPastaEmpresa())) {
                    model.addRow(new Object[]{erro.getId_erro(), erro.getId_cliente(), erro.getPastaEmpresa(), erro.getCoderro(), erro.getPrograma(), erro.getArquivo(), erro.getMensagemerro(), erro.getUsuariots(), erro.getData()});
                }
            }
        }
        if (jTableErro.getRowCount() > 0) {
            jTableErro.addRowSelectionInterval(0, 0);
        }
    }

    private void carregaFiltros() {
        File diretorio = new File("X:\\HDS_BKP");
        String[] listaDiretorios = diretorio.list();
        for (String pasta : listaDiretorios) {
            jComboBox1.addItem(pasta);
        }
    }
}
